name: ci

on:
  push:
    branches: [ develop, main ]

  pull_request:
    branches: [ develop ]

jobs:
  create-virtualenv:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.4

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.13
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          pip install -U pip
          poetry install --no-interaction --no-root

  linter:
    needs: create-virtualenv
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        with:
          python-version: 3.10.4

      - uses: actions/cache@v3
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install pre-commit
        run: |
          source .venv/bin/activate
          export PATH=$PATH:/root/.local/bin
          pip3 install pre_commit
          python3 -m pre_commit install

      - name: flake8
        run: |
          source .venv/bin/activate
          python3 -m pre_commit run flake8 --all-files

      - name: isort
        run: |
          source .venv/bin/activate
          python3 -m pre_commit run isort --all-files

  tests:
    needs: create-virtualenv
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        with:
          python-version: 3.10.4

      - uses: actions/cache@v3
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ hashFiles('**/poetry.lock') }}

      - name: Run tests
        run: |
          poetry run pytest -vvv --cov=search --cov-report term --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
